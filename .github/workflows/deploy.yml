name: Infrastructure Deployment

on:
  pull_request:
    branches: [main]

  push:
    branches: [dev, main]

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.7
  PYTHON_VERSION: '3.10'

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION}}

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit

      - name: Run Bandit security scan
        run: bandit -r . -c .bandit

  test:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python tests
        run: |
          PYTHONPATH=. pytest tests/ -v --cov=scripts --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 7

  validate:
    name: validate
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform-version: ${{env.TF_VERSION}}

      - name: Configure_AWS_Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ env.AWS_REGION}}

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
      
      - name: Terraform validate
        working-directory: ./terraform
        run: terraform validate

  plan:
    name: Plan
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform-version: ${{env.TF_VERSION}}

      - name: Configure_AWS_Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCES_KEY}}
          aws-region: ${{ env.AWS_REGION}}

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
      
      - name: Terraform plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan
      
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan
          retention-days: 1

  deploy:
    name: Deploy
    needs: plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform-version: ${{env.TF_VERSION}}

      - name: Configure_AWS_Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCES_KEY}}
          aws-region: ${{ env.AWS_REGION}}

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init

      - name: Download Terraform Plan  
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Save Terraform outputs
        working-directory: ./terraform
        run: terraform output -json > terraform_outputs.json

      - name: Upload Terraform Output
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: terraform/terraform_outputs.json
          retention-days: 7
      

